---
swagger: "2.0"
info:
  description: "This is a simple REST API demo, developed using api-first approach and generated using Swagger Codegen plugin"
  version: "1.0.0"
  title: "REST API demo"

tags:
  - name: "users"
    description: "Operations about users"
  - name: "subscriptions"
    description: "Operations about user subscriptions"
paths:
  /users:
    get:
      tags:
        - "users"
      summary: "Get all users"
      operationId: "getAllUsers"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserResponseDto"
        403:
          description: "Forbidden"
    post:
      tags:
        - "users"
      summary: "Create new user"
      operationId: "createUser"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/UserRequestDto"
      responses:
        201:
          description: "New user was created"
          schema:
            $ref: "#/definitions/UserResponseDto"
        400:
          description: "Invalid input"
        403:
          description: "Forbidden"
  /users/{id}:
    get:
      summary: "Get user by id"
      operationId: "getUser"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserResponseDto"
        404:
          description: "User not found"
        403:
          description: "Forbidden"
    put:
      summary: "Update user"
      operationId: "updateUser"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
              $ref: "#/definitions/UserRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserResponseDto"
        400:
          description: "Invalid input"
        404:
          description: "User not found"
        403:
          description: "Forbidden"
    delete:
        summary: "Delete user"
        operationId: "deleteUser"
        parameters:
          - name: "id"
            in: path
            description: "ID of user to return"
            required: true
            type: "integer"
            format: "int64"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/UserResponseDto"
          404:
            description: "User not found"
          403:
            description: "Forbidden"
  /users/{id}/subscriptions:
    get:
      tags:
        - "subscriptions"
        - "users"
      summary: "Get all subscriptions for user"
      operationId: "getUserSubscriptions"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
          format: "int64"
      produces:
          - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SubscriptionResponseDto"
        403:
          description: "Forbidden"
  /subscriptions:
    get:
      tags:
        - "subscriptions"
      summary: "Get all subscriptions"
      operationId: "getAllSubscriptions"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SubscriptionResponseDto"
        403:
          description: "Forbidden"
    post:
      tags:
        - "subscriptions"
      summary: "Create new subscription"
      operationId: "createSubscription"
      parameters:
        - in: body
          name: "body"
          description: "Subscription object that needs to be added to the store"
          schema:
            $ref: "#/definitions/SubscriptionRequestDto"
      responses:
        201:
          description: "New subscription was created"
          schema:
            $ref: "#/definitions/SubscriptionResponseDto"
        400:
          description: "Invalid input"
        403:
          description: "Forbidden"
  /subscriptions/{id}:
    get:
      tags:
        - "subscriptions"
      summary: "Get subscription by id"
      operationId: "getSubscription"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of subscription to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubscriptionResponseDto"
        404:
          description: "Subscription not found"
        403:
          description: "Forbidden"
    put:
      tags:
        - "subscriptions"
      summary: "Update subscription"
      operationId: "updateSubscription"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of subscription to return"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Subscription object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/SubscriptionRequestDto"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubscriptionResponseDto"
        400:
          description: "Invalid input"
        404:
          description: "Subscription not found"
        403:
          description: "Forbidden"
definitions:
  UserRequestDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      birthday:
        type: "string"
      links:
        type: "array"
        items:
          $ref: "#/definitions/Link"
  UserResponseDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      birthday:
        type: "string"
      links:
        type: "array"
        items:
          $ref: "#/definitions/Link"
  SubscriptionRequestDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      links:
        type: "array"
        items:
          $ref: "#/definitions/Link"
  SubscriptionResponseDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      startDate:
        type: "string"
      links:
        type: "array"
        items:
          $ref: "#/definitions/Link"
  Link:
    type: "object"
    properties:
      rel:
        type: "string"
      href:
        type: "string"
